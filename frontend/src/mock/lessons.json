{
  "lessons": [
    {
      "id": "lesson_001",
      "courseId": "course_001",
      "title": "What is React and Why Use It?",
      "content": "React is a JavaScript library for building user interfaces, particularly web applications. It was created by Facebook and is now maintained by Facebook and the community. React allows you to create reusable UI components and manage the state of your application efficiently.",
      "type": "video",
      "duration": "45 minutes",
      "order": 1,
      "moduleId": "module_001",
      "resources": [
        {
          "type": "video",
          "title": "React Introduction Video",
          "url": "/videos/react-intro.mp4",
          "duration": "15 minutes"
        },
        {
          "type": "slides",
          "title": "React Fundamentals Slides",
          "url": "/slides/react-fundamentals.pdf"
        },
        {
          "type": "cheat-sheet",
          "title": "React Quick Reference",
          "url": "/resources/react-cheatsheet.pdf"
        }
      ],
      "exercises": [
        {
          "id": "exercise_001",
          "type": "quiz",
          "title": "React Basics Quiz",
          "questions": [
            {
              "id": "q1",
              "question": "What is React?",
              "options": [
                "A database",
                "A JavaScript library for building UIs",
                "A CSS framework",
                "A server-side technology"
              ],
              "correctAnswer": 1,
              "explanation": "React is a JavaScript library created by Facebook for building user interfaces."
            }
          ]
        }
      ],
      "prerequisites": ["JavaScript", "HTML", "CSS"],
      "learningObjectives": [
        "Understand what React is and why it's useful",
        "Learn the basic concepts of React",
        "Set up a React development environment"
      ]
    },
    {
      "id": "lesson_002",
      "courseId": "course_001",
      "title": "Setting Up Your Development Environment",
      "content": "In this lesson, you'll learn how to set up a complete React development environment. We'll cover Node.js installation, package managers, and the tools you need to start building React applications.",
      "type": "hands-on",
      "duration": "60 minutes",
      "order": 2,
      "moduleId": "module_001",
      "resources": [
        {
          "type": "setup-guide",
          "title": "Development Environment Setup",
          "url": "/guides/dev-environment-setup.md"
        },
        {
          "type": "video",
          "title": "Environment Setup Walkthrough",
          "url": "/videos/env-setup.mp4",
          "duration": "20 minutes"
        }
      ],
      "exercises": [
        {
          "id": "exercise_002",
          "type": "coding",
          "title": "Create Your First React App",
          "description": "Use Create React App to create a new React application",
          "starterCode": "npx create-react-app my-first-app",
          "solution": "cd my-first-app && npm start",
          "hints": [
            "Make sure Node.js is installed",
            "Use the latest version of Create React App",
            "Check that the development server starts successfully"
          ]
        }
      ],
      "prerequisites": ["JavaScript", "Command Line Basics"],
      "learningObjectives": [
        "Install Node.js and npm",
        "Set up a React development environment",
        "Create your first React application"
      ]
    },
    {
      "id": "lesson_003",
      "courseId": "course_001",
      "title": "Your First React Component",
      "content": "Now that you have your environment set up, let's create your first React component! We'll start with a simple functional component and learn about JSX syntax.",
      "type": "coding",
      "duration": "75 minutes",
      "order": 3,
      "moduleId": "module_001",
      "resources": [
        {
          "type": "video",
          "title": "Creating React Components",
          "url": "/videos/react-components.mp4",
          "duration": "25 minutes"
        },
        {
          "type": "interactive",
          "title": "JSX Playground",
          "url": "/interactive/jsx-playground"
        }
      ],
      "exercises": [
        {
          "id": "exercise_003",
          "type": "coding",
          "title": "Build a Welcome Component",
          "description": "Create a React component that displays a welcome message",
          "starterCode": "function Welcome() {\n  // Your code here\n}",
          "solution": "function Welcome({ name }) {\n  return <h1>Hello, {name}!</h1>;\n}",
          "hints": [
            "Use JSX syntax to return HTML-like elements",
            "Remember to export your component",
            "Use props to make your component reusable"
          ],
          "testCases": [
            {
              "input": "Welcome({ name: 'Sarah' })",
              "expectedOutput": "<h1>Hello, Sarah!</h1>"
            }
          ]
        }
      ],
      "prerequisites": ["React Environment Setup"],
      "learningObjectives": [
        "Create your first React component",
        "Understand JSX syntax",
        "Learn about component props"
      ]
    },
    {
      "id": "lesson_004",
      "courseId": "course_001",
      "title": "Understanding React Hooks",
      "content": "React Hooks are functions that let you use state and other React features in functional components. In this lesson, we'll explore useState and useEffect hooks in detail.",
      "type": "video",
      "duration": "90 minutes",
      "order": 1,
      "moduleId": "module_003",
      "resources": [
        {
          "type": "video",
          "title": "React Hooks Deep Dive",
          "url": "/videos/react-hooks.mp4",
          "duration": "30 minutes"
        },
        {
          "type": "documentation",
          "title": "Hooks API Reference",
          "url": "https://reactjs.org/docs/hooks-intro.html"
        }
      ],
      "exercises": [
        {
          "id": "exercise_004",
          "type": "coding",
          "title": "Counter with useState",
          "description": "Create a counter component using the useState hook",
          "starterCode": "import { useState } from 'react';\n\nfunction Counter() {\n  // Your code here\n}",
          "solution": "import { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  \n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n      <button onClick={() => setCount(count - 1)}>Decrement</button>\n    </div>\n  );\n}",
          "hints": [
            "Use useState to create state variables",
            "Remember to destructure the returned array",
            "Use the setter function to update state"
          ]
        }
      ],
      "prerequisites": ["React Components", "JavaScript ES6+"],
      "learningObjectives": [
        "Understand what React Hooks are",
        "Master the useState hook",
        "Learn the useEffect hook for side effects"
      ]
    },
    {
      "id": "lesson_005",
      "courseId": "course_001",
      "title": "State Management with Context API",
      "content": "Learn how to manage global state in React applications using the Context API. This is essential for sharing data between components that are far apart in the component tree.",
      "type": "hands-on",
      "duration": "120 minutes",
      "order": 2,
      "moduleId": "module_003",
      "resources": [
        {
          "type": "video",
          "title": "Context API Tutorial",
          "url": "/videos/context-api.mp4",
          "duration": "35 minutes"
        },
        {
          "type": "interactive",
          "title": "Context Playground",
          "url": "/interactive/context-playground"
        }
      ],
      "exercises": [
        {
          "id": "exercise_005",
          "type": "coding",
          "title": "Theme Context Provider",
          "description": "Create a theme context that can be used throughout your app",
          "starterCode": "import { createContext, useContext } from 'react';\n\n// Your code here",
          "solution": "import { createContext, useContext, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nexport function ThemeProvider({ children }) {\n  const [theme, setTheme] = useState('light');\n  \n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  return useContext(ThemeContext);\n}",
          "hints": [
            "Use createContext to create a context",
            "Create a provider component",
            "Use useContext to consume the context"
          ]
        }
      ],
      "prerequisites": ["React Hooks", "Component Props"],
      "learningObjectives": [
        "Understand the Context API",
        "Create and use context providers",
        "Share state between distant components"
      ]
    }
  ]
}